/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PLACETOAIRPORT_H_RPCGEN
#define _PLACETOAIRPORT_H_RPCGEN

#include <rpc/rpc.h>
#include "clientToplace.h"

#ifdef __cplusplus
extern "C" {
#endif

#define CODELEN 3
#define STATEMAXLEN 2
#define CITYMAXLEN 63



typedef struct airport *airportlist;

struct airport {
	codetype code;
	citytype city;
	statetype state;
	double distance;
	airportlist next;
};
typedef struct airport airport;

struct LatLon {
	double lat;
	double lon;
};
typedef struct LatLon LatLon;

struct returnAirports {
	int err;
	union {
		airportlist list;
	} returnAirports_u;
};
typedef struct returnAirports returnAirports;

#define PLACE_TO_AIRPORT 0x20000015
#define PLACE_TO_AIRPORT_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define airportServerFunct 1
extern  returnAirports * airportserverfunct_1(LatLon *, CLIENT *);
extern  returnAirports * airportserverfunct_1_svc(LatLon *, struct svc_req *);
extern int place_to_airport_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define airportServerFunct 1
extern  returnAirports * airportserverfunct_1();
extern  returnAirports * airportserverfunct_1_svc();
extern int place_to_airport_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_codetype (XDR *, codetype*);
extern  bool_t xdr_citytype (XDR *, citytype*);
extern  bool_t xdr_statetype (XDR *, statetype*);
extern  bool_t xdr_airportlist (XDR *, airportlist*);
extern  bool_t xdr_airport (XDR *, airport*);
extern  bool_t xdr_LatLon (XDR *, LatLon*);
extern  bool_t xdr_returnAirports (XDR *, returnAirports*);

#else /* K&R C */
extern bool_t xdr_codetype ();
extern bool_t xdr_citytype ();
extern bool_t xdr_statetype ();
extern bool_t xdr_airportlist ();
extern bool_t xdr_airport ();
extern bool_t xdr_LatLon ();
extern bool_t xdr_returnAirports ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PLACETOAIRPORT_H_RPCGEN */
